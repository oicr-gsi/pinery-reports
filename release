#!/bin/sh

set -eux

git reset --hard HEAD
git clean -f

git checkout develop
git pull
xmlstarlet sel -t -v /_:project/_:version pom.xml | sed -e s/-SNAPSHOT//g > version.temp
${EDITOR:-editor} version.temp

REPORTS_VERSION=$(cat version.temp)
REPORTS_VERSION_NEXT=$(awk -F. '{print $1 "." $2 "." ($3 + 1) "-SNAPSHOT"}' version.temp)
rm version.temp
LAST_RELEASE=$(git describe --abbrev=0 --tags)

git checkout -b v${REPORTS_VERSION_NEXT}_pr
( echo -e "# ${REPORTS_VERSION}\n\n## [${REPORTS_VERSION}]  $(date +%Y-%m-%d)\n### Added:\n### Changed:\n### Fixed:\n"; git log ${LAST_RELEASE}..HEAD --format="  * %s"; echo; cat CHANGELOG.md ) > temp && mv temp CHANGELOG.md
${EDITOR:-editor} CHANGELOG.md

mvn clean install
mvn versions:set -DnewVersion=${REPORTS_VERSION} -DgenerateBackupPoms=false
git commit -a -m "Pinery Reports ${REPORTS_VERSION} release"
git tag v${REPORTS_VERSION}
mvn deploy
mvn versions:set -DnewVersion=${REPORTS_VERSION_NEXT} -DgenerateBackupPoms=false
git commit -a -m "prepare for next development iteration"
git push origin v${REPORTS_VERSION} --follow-tags
git push -u origin v${REPORTS_VERSION_NEXT}_pr
set +x

echo REPORTS_VERSION=${REPORTS_VERSION}
xdg-open https://github.com/oicr-gsi/pinery-reports/pull/new/v${REPORTS_VERSION_NEXT}_pr
